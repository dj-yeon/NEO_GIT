<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdh.dao.companyregisterDao">

	<!-- 회사 등록 Insert -->
	<insert id="doCompanyIns"
		parameterType="com.hdh.vo.Vo_companyregister">
		Insert into neo_companyregister(
		companyName,
		representative,
		businessLicenseNumber,
		item,
		industrialClassificationCode,
		dateEstablishment,
		businessAddress,
		majorCommodity,
		oneSOwnBusinessYn,
		fiftyBillionYn,
		instituteCorporateSubsidiaryYn,
		instituteCorporateSubsidiaryYndate,
		ventureCertificationYn,
		ventureCertificationYndate,
		mainBizYn,
		mainBizYndate,
		inobizYn,
		inobizYndate,
		familyFriendlyCertificationYn,
		familyFriendlyCertificationYndate,
		materialPartCertificationYn,
		materialPartCertificationYndate,
		rootCompanyCertificationYn,
		rootCompanyCertificationYndate,
		isoCertificationYn,
		isoCertificationYndate,
		patentCase,
		utilityModelItem,
		patentCaseThreeYears,
		utilityModelItemThreeYears,
		id
		)
		values(
		#{companyName},
		#{representative},
		#{businessLicenseNumber},
		#{item},
		#{industrialClassificationCode},
		#{dateEstablishment},
		#{businessAddress},
		#{majorCommodity},
		#{oneSOwnBusinessYn},
		#{fiftyBillionYn},
		#{instituteCorporateSubsidiaryYn},
		#{instituteCorporateSubsidiaryYndate},
		#{ventureCertificationYn},
		#{ventureCertificationYndate},
		#{mainBizYn},
		#{mainBizYndate},
		#{inobizYn},
		#{inobizYndate},
		#{familyFriendlyCertificationYn},
		#{familyFriendlyCertificationYndate},
		#{materialPartCertificationYn},
		#{materialPartCertificationYndate},
		#{rootCompanyCertificationYn},
		#{rootCompanyCertificationYndate},
		#{isoCertificationYn},
		#{isoCertificationYndate},
		#{patentCase},
		#{utilityModelItem},
		#{patentCaseThreeYears},
		#{utilityModelItemThreeYears},
		#{id}

		)
	</insert>

<<<<<<< .mine
||||||| .r35
=======
	<!-- 회사 직원 Insert -->
	<insert id="doComEmpIns"
		parameterType="com.hdh.vo.Vo_companyemployee">
		Insert into neo_companyemployee(
		name_kor,
		edu,
		science_study,
		birthdate,
		experience,
		businessLicenseNumber
		)
		values(
		#{name_kor},
		#{edu},
		#{science_study},
		#{birthdate},
		#{experience},
		#{businessLicenseNumber}
		)
	</insert>

>>>>>>> .r38
	<!-- 회원 아이디의 회사 리스트 가져오기 -->
	<select id="doCompanyList"
		resultType="com.hdh.vo.Vo_companyregister"
		parameterType="com.hdh.vo.UserVo">
		SELECT * FROM neo_companyregister
		WHERE id = #{id}
	</select>

	<!-- Company List Search -->
	<select id="doCompanyList2"
		resultType="com.hdh.vo.Vo_companyregister">
		SELECT * FROM neo_companyregister;
	</select>

	<!-- 회사 정보 하나씩 -->
	<select id="doCompamyListOne"
		resultType="com.hdh.vo.Vo_companyregister" parameterType="String">
		SELECT *
		FROM neo_companyregister
		where businessLicenseNumber =
		#{businessLicenseNumber}
	</select>

	<!-- 회사정보 수정 -->
	<update id="doCompanyUp"
		parameterType="com.hdh.vo.Vo_companyregister">
		Update neo_companyregister
		SET
		companyName = #{companyName},
		representative = #{representative},
		businessLicenseNumber = #{businessLicenseNumber}
		WHERE businessLicenseNumber =
		#{businessLicenseNumber}
	</update>

	<!-- 회사 삭제 -->
	<delete id="doCompanyDel">
		Delete from neo_companyregister
		WHERE businessLicenseNumber = #{businessLicenseNumber}

	</delete>
<<<<<<< .mine
||||||| .r35
=======




	<!-- 직원 리스트 가져오기 -->
	<select id="doEmployeeList"
		resultType="com.hdh.vo.Vo_companyemployee">
		SELECT *
		FROM neo_companyemployee
	</select>

	<insert id="insertEmployeeList"
		parameterType="com.hdh.vo.Vo_companyregister">
		Insert into neo_companyemployee(
		name_kor,
		edu,
		science_study,
		birthdate,
		experience,
		businessLicenseNumber
		)
		values(
		#{name_kor},
		#{edu},
		#{science_study},
		#{birthdate},
		#{experience},
		#{businessLicenseNumber}
		)
	</insert>
>>>>>>> .r38

	<select id="doManufacCode" resultType="com.hdh.vo.ExcelVo">
		select *
		from neo_corporate_management_analysis
	</select>

	<select id="getC" resultType="com.hdh.vo.ExcelVo">
		select industrialClassificationCode, majorCommodity
		  from neo_corporate_management_analysis
		 where industrialClassificationCode like 'C%';
	</select>

	<select id="getNoC" resultType="com.hdh.vo.ExcelVo">
		select industrialClassificationCode, majorCommodity
		  from neo_corporate_management_analysis
		 where industrialClassificationCode not like 'C%';
	</select>







</mapper>